Windows commands:
<C-W> <command>	- cretates a split for the next command

Diff mode:
]c - go to next diff
[c - go to previous diff
:diffupdate - update diff
dp - diff put (puts the "diff" to the file where it's missing)
do - diff obtain (removes the text from other windows)

Registers:
@@ - executes the previous register that was called
	(e.g if @a was executed before then @@ = @a)
"{reg_num} - do an operation on a specific register
"{UpperCase reg_letter} - appends to the lowerCase reg


Moving:
0 - goes to the beginning of the line

	range format:
	num,num
	1,$ - from line 1 to end of file
	% - same as above
	.+3,$ - from current line + 3 to EOF
	't,'b - from mark to mark b (inclusive)
	'<,'> - visually selected regions
	:[num] - will write :.,.+(num-1)
:g/{pattern}/{command} - for each case instance of pattern in
			range(default whole file) execute 'command'
    e.g :g+//+s/foobar/barfoo/g (replace '// foobar' to '// barfoo'

Grepping:
	grep 'string' 'file' (the search is in the currect directory)
	cnext,cprevious - go to next/previous result
	clist - list all matching files (and lines)

Tab copletion:
	<C-P>	- go to the previous autocomplete result
	<Tab> 	- go to the next autocomplete result
	<C-D>	- show all possible autocompletion
	<C-L>	- complete to the longest unambiguous word


vim info:
	this file is created (and updated) each time
	you exit VIM. It holds data like:
		1) Command-line and Search pattern history
		2) Text in registers
		3) Markgs for various files
		4) The buffer list
		5) Global variables

	set viminfo=[option1][arg1],[option2][arg2] .. - sets what
			will be saved in vim info file
		options are:
			: - number of lines to save from command line
			/ - number of lines to save from input line
			    history
			and more. more info in 'viminfo' and
			    'viminfo-file'
		exa: :set viminfo='1000,:5

	to restore setting enter '[n] to get the last n'th session
	like '0 (for the last session)

file history:
	:oldfiles - lists previously opened files (and your position)
	:split #<3 - open file num 3 in old files
	:browse oldfiles - browse between old files

	:wviminfo! ~/tmp/viminfo - save VIM's settings in a file
	:rviminfo! ~/tmp/viminfo - load VIM's settings from a file
		(both function are used to pass information between
			VIMS' sessions)

file browsing:
	in file browser (e.g find . ):
		o - Horizontally split window and display file
		v - same as o but vertically
		p - use 'preview-window'
		P - edit in the previous window
		t - open file in a new tab

	when editing a file:
		Explore - open a browser in current's file dir
	
	read netrw-browse for more info

local directory:
	cd - change current directory
	pwd - list current dir path
	lcd - change dir locally (only for the current buffer)

buffers:
	hide edit file - hides current buffer and starts to edit
			    'file'	
	buffers - list all buffers
	sbuffer [buf. num/nane] - opens a buffer in a different
				    windows
	bnext	- move to next buffer
	bprevious - move to previous buffer
	bfirst - nive to the first buffer
	blast - nive to the last buffer
	bdelete [bufnum] - delete buffer from list

file-formats:
	set fileformat=unix ; write - converts the file into unix
					file (with CR as NL)
netew:
	edit files over the network
	:edit scp://root@nps-server-36-141//root/maillog - edits a
					file using scp protocol
	read more at 'help netrw'

Editing text:
	<C-W> - delete a word
	<C-U> - delete from cursor to start (keeps indentation)

auto-completion:
	<C-P> - move to previous suggestion
	<C-N> - move to next suggestion

	<C-X> <C-F> - auto-complete file name
	<C-X> <C-L> - auto-complete whole line
	<C-X> <C-D> - auto-complete macro (also in #include)
	<C-X> <C-K> - auto-complete from dictionary
	<C-X> <C-T> - auto-complete from Thesaurus
	<C-X> <C-]> - auto-complete from tags
	<C-X> <C-V> - auto-complete from vim-command line
	<C-X> <C-O> - "omni completion". Completes item that belong to
			struct

Man pages:
	<leader>K - see man page for the command under the cursor

fast-editing (in i-mode):
	<C-A>  - inserts the text you wrote when was in
			insert mode last time
	<C-Y>	- inserts the charecter in the above line
		(and same column)
	<C-E>	- inserts the charecter in the line below
			(and same column)
	<C-V>	- insert the character literally
	<C-K>[Char code] - insert a digraph (see ":digraph").
		i.e <C-K>Pd inserts Â£
	<C-O>	- insert a Normal mode command

text-formatting:
	gq - format the text according to current 'textwidth'
		parameter
		e.g v4jgq - reformats the next 4 lines
	<C-O>	- insert a Normal mode command

scrolling:
	zh - "horizontally scrolling" right
	zl - "horizontally scrolling" left
	zH - half a windiw "horizontally scrolling" right
	zL - half a windiw "horizontally scrolling" left
	zs - scroll left to put the cursor at the start
	ze - scroll left to put the cursor at the end

	g0 - to first visible character in window
	g^ - to first non-blank visible character
	gm - to middle of this line
	g$ - to last visible character in line

searching:
	set [no]ignorecase - search case[in]sensitive
	set ignorecase smartcase - checks first if you have a case
		sensitive pattern that matches. If not, searches
		case insensitive

stopped at page 212
